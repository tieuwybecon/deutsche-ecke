'use client'

import React, { useState, useMemo } from 'react';
import { FaBook, FaCreditCard, FaTrophy, FaShieldAlt, FaStar, FaExclamationTriangle, FaPhone, FaEnvelope, FaMapMarkerAlt, FaChevronDown, FaChevronUp, FaHome, FaChevronRight, FaSearch, FaDownload, FaPrint, FaTimes } from 'react-icons/fa';
import Header from '@/components/sections/Header';
import Footer from '@/components/sections/Footer';

const regulations = [
  {
    id: 1,
    title: "Quy ƒê·ªãnh V·ªÅ H·ªçc T·∫≠p",
    icon: FaBook,
    iconColor: "text-blue-600",
    bgColor: "from-blue-50 to-blue-100",
    darkBgColor: "dark:from-blue-900 dark:to-blue-800",
    summary: "C√°c quy ƒë·ªãnh v·ªÅ th·ªùi gian, chuy√™n c·∫ßn v√† th√°i ƒë·ªô h·ªçc t·∫≠p",
    rules: [
      "H·ªçc vi√™n ph·∫£i tham d·ª± ƒë·∫ßy ƒë·ªß c√°c bu·ªïi h·ªçc theo l·ªãch ƒë√£ ƒë∆∞·ª£c s·∫Øp x·∫øp",
      "Th·ªùi gian ƒë·∫øn l·ªõp: tr∆∞·ªõc gi·ªù h·ªçc 10 ph√∫t ƒë·ªÉ chu·∫©n b·ªã",
      "Ngh·ªâ h·ªçc ph·∫£i b√°o tr∆∞·ªõc √≠t nh·∫•t 2 ti·∫øng v√† c√≥ l√Ω do ch√≠nh ƒë√°ng",
      "Ho√†n th√†nh ƒë·∫ßy ƒë·ªß b√†i t·∫≠p ƒë∆∞·ª£c giao v·ªÅ nh√† ƒë√∫ng h·∫°n",
      "T√≠ch c·ª±c tham gia c√°c ho·∫°t ƒë·ªông th·ª±c h√†nh trong l·ªõp",
      "Kh√¥ng s·ª≠ d·ª•ng ƒëi·ªán tho·∫°i trong gi·ªù h·ªçc tr·ª´ khi ƒë∆∞·ª£c gi√°o vi√™n cho ph√©p",
      "Mang theo ƒë·∫ßy ƒë·ªß t√†i li·ªáu h·ªçc t·∫≠p trong m·ªói bu·ªïi h·ªçc",
      "T√¥n tr·ªçng gi√°o vi√™n v√† c√°c h·ªçc vi√™n kh√°c trong l·ªõp"
    ]
  },
  {
    id: 2,
    title: "Quy ƒê·ªãnh V·ªÅ Thanh To√°n",
    icon: FaCreditCard,
    iconColor: "text-green-600",
    bgColor: "from-green-50 to-green-100",
    darkBgColor: "dark:from-green-900 dark:to-green-800",
    summary: "Ch√≠nh s√°ch thanh to√°n h·ªçc ph√≠ v√† c√°c kho·∫£n ph√≠ kh√°c",
    rules: [
      "H·ªçc ph√≠ ph·∫£i ƒë∆∞·ª£c thanh to√°n ƒë·∫ßy ƒë·ªß tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu kh√≥a h·ªçc",
      "C√°c kho·∫£n ph√≠ kh√°c (t√†i li·ªáu, thi c·ª≠) thanh to√°n theo th√¥ng b√°o",
      "H·ªçc vi√™n c√≥ th·ªÉ thanh to√°n b·∫±ng ti·ªÅn m·∫∑t, chuy·ªÉn kho·∫£n ho·∫∑c th·∫ª",
      "H√≥a ƒë∆°n VAT ƒë∆∞·ª£c xu·∫•t theo y√™u c·∫ßu c·ªßa h·ªçc vi√™n",
      "Kh√¥ng ho√†n tr·∫£ h·ªçc ph√≠ sau khi ƒë√£ b·∫Øt ƒë·∫ßu kh√≥a h·ªçc qu√° 7 ng√†y",
      "Tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát s·∫Ω ƒë∆∞·ª£c xem x√©t ri√™ng theo ch√≠nh s√°ch c·ªßa trung t√¢m",
      "H·ªçc vi√™n ƒë∆∞·ª£c gi·ªØ ch·ªó h·ªçc t·ªëi ƒëa 3 ng√†y sau khi ƒëƒÉng k√Ω",
      "Ph√≠ tr·∫£ ch·∫≠m: 2% tr√™n t·ªïng s·ªë ti·ªÅn m·ªói tu·∫ßn"
    ]
  },
  {
    id: 3,
    title: "Quy ƒê·ªãnh V·ªÅ Thi C·ª≠ & Ch·ª©ng Ch·ªâ",
    icon: FaTrophy,
    iconColor: "text-yellow-600",
    bgColor: "from-yellow-50 to-yellow-100",
    darkBgColor: "dark:from-yellow-900 dark:to-yellow-800",
    summary: "Quy tr√¨nh ƒë√°nh gi√°, thi c·ª≠ v√† c·∫•p ph√°t ch·ª©ng ch·ªâ",
    rules: [
      "H·ªçc vi√™n ph·∫£i ƒë·∫°t t·ªëi thi·ªÉu 80% s·ªë bu·ªïi h·ªçc ƒë·ªÉ ƒë∆∞·ª£c d·ª± thi",
      "Ki·ªÉm tra ƒë·ªãnh k·ª≥ b·∫Øt bu·ªôc sau m·ªói unit h·ªçc",
      "Thi cu·ªëi kh√≥a ƒë·ªÉ ƒë√°nh gi√° v√† c·∫•p ch·ª©ng nh·∫≠n ho√†n th√†nh",
      "ƒêi·ªÉm s·ªë ƒë∆∞·ª£c th√¥ng b√°o trong v√≤ng 7 ng√†y l√†m vi·ªác sau khi thi",
      "H·ªçc vi√™n c√≥ quy·ªÅn ph√∫c kh·∫£o trong v√≤ng 3 ng√†y sau khi c√≥ k·∫øt qu·∫£",
      "Ch·ª©ng ch·ªâ ƒë∆∞·ª£c c·∫•p cho h·ªçc vi√™n ƒë·∫°t y√™u c·∫ßu v·ªÅ ƒëi·ªÉm s·ªë v√† chuy√™n c·∫ßn",
      "Thi l·∫°i ƒë∆∞·ª£c ph√©p t·ªëi ƒëa 2 l·∫ßn v·ªõi ph√≠ thi l·∫°i",
      "Ch·ª©ng ch·ªâ qu·ªëc t·∫ø c√≥ hi·ªáu l·ª±c theo chu·∫©n ch√¢u √Çu"
    ]
  },
  {
    id: 4,
    title: "Quy ƒê·ªãnh V·ªÅ An To√†n & Tr·∫≠t T·ª±",
    icon: FaShieldAlt,
    iconColor: "text-purple-600",
    bgColor: "from-purple-50 to-purple-100",
    darkBgColor: "dark:from-purple-900 dark:to-purple-800",
    summary: "ƒê·∫£m b·∫£o m√¥i tr∆∞·ªùng h·ªçc t·∫≠p an to√†n v√† vƒÉn minh",
    rules: [
      "Gi·ªØ g√¨n v·ªá sinh chung v√† kh√¥ng g√¢y ti·∫øng ·ªìn trong khu v·ª±c h·ªçc t·∫≠p",
      "Trang ph·ª•c l·ªãch s·ª±, ph√π h·ª£p v·ªõi m√¥i tr∆∞·ªùng h·ªçc t·∫≠p",
      "Kh√¥ng mang theo ƒë·ªì u·ªëng c√≥ c·ªìn ho·∫∑c ch·∫•t k√≠ch th√≠ch v√†o trung t√¢m",
      "B·∫£o qu·∫£n t√†i s·∫£n chung v√† ch·ªãu tr√°ch nhi·ªám b·ªìi th∆∞·ªùng n·∫øu l√†m h·ªèng",
      "Tu√¢n th·ªß c√°c bi·ªán ph√°p an to√†n Covid-19 khi c√≥ y√™u c·∫ßu",
      "B√°o c√°o ngay cho ban qu·∫£n l√Ω khi ph√°t hi·ªán s·ª± c·ªë b·∫•t th∆∞·ªùng",
      "Kh√¥ng h√∫t thu·ªëc trong khu√¥n vi√™n trung t√¢m",
      "Xe m√°y, √¥ t√¥ ph·∫£i ƒë·∫≠u ƒë√∫ng n∆°i quy ƒë·ªãnh"
    ]
  },
  {
    id: 5,
    title: "Quy ƒê·ªãnh V·ªÅ Quy·ªÅn L·ª£i H·ªçc Vi√™n",
    icon: FaStar,
    iconColor: "text-orange-600",
    bgColor: "from-orange-50 to-orange-100",
    darkBgColor: "dark:from-orange-900 dark:to-orange-800",
    summary: "C√°c quy·ªÅn l·ª£i v√† d·ªãch v·ª• h·ªó tr·ª£ h·ªçc vi√™n",
    rules: [
      "ƒê∆∞·ª£c h·ªçc b√π khi ngh·ªâ c√≥ l√Ω do ch√≠nh ƒë√°ng v√† b√°o tr∆∞·ªõc",
      "ƒê∆∞·ª£c t∆∞ v·∫•n mi·ªÖn ph√≠ v·ªÅ l·ªô tr√¨nh h·ªçc v√† du h·ªçc",
      "ƒê∆∞·ª£c s·ª≠ d·ª•ng t√†i nguy√™n h·ªçc t·∫≠p (th∆∞ vi·ªán, ph√≤ng t·ª± h·ªçc)",
      "ƒê∆∞·ª£c nh·∫≠n h·ªó tr·ª£ k·ªπ thu·∫≠t v√† academic mentor",
      "ƒê∆∞·ª£c tham gia c√°c s·ª± ki·ªán vƒÉn h√≥a v√† workshop mi·ªÖn ph√≠",
      "ƒê∆∞·ª£c b·∫£o m·∫≠t th√¥ng tin c√° nh√¢n theo quy ƒë·ªãnh ph√°p lu·∫≠t",
      "ƒê∆∞·ª£c ∆∞u ƒë√£i h·ªçc ph√≠ cho kh√≥a h·ªçc ti·∫øp theo",
      "ƒê∆∞·ª£c h·ªó tr·ª£ vi·ªác l√†m sau khi ho√†n th√†nh kh√≥a h·ªçc"
    ]
  },
  {
    id: 6,
    title: "Quy ƒê·ªãnh V·ªÅ X·ª≠ L√Ω Vi Ph·∫°m",
    icon: FaExclamationTriangle,
    iconColor: "text-red-600",
    bgColor: "from-red-50 to-red-100",
    darkBgColor: "dark:from-red-900 dark:to-red-800",
    summary: "Quy tr√¨nh x·ª≠ l√Ω vi ph·∫°m v√† h√¨nh th·ª©c k·ª∑ lu·∫≠t",
    rules: [
      "Vi ph·∫°m l·∫ßn ƒë·∫ßu: nh·∫Øc nh·ªü b·∫±ng l·ªùi v√† ghi nh·∫≠n",
      "Vi ph·∫°m l·∫ßn hai: c·∫£nh c√°o b·∫±ng vƒÉn b·∫£n",
      "Vi ph·∫°m nghi√™m tr·ªçng: ƒë√¨nh ch·ªâ h·ªçc t·∫≠p c√≥ th·ªùi h·∫°n 1-2 tu·∫ßn",
      "Vi ph·∫°m r·∫•t nghi√™m tr·ªçng: bu·ªôc th√¥i h·ªçc kh√¥ng ho√†n ph√≠",
      "M·ªçi quy·∫øt ƒë·ªãnh x·ª≠ l√Ω vi ph·∫°m ƒë·ªÅu ƒë∆∞·ª£c th√¥ng b√°o b·∫±ng vƒÉn b·∫£n",
      "H·ªçc vi√™n c√≥ quy·ªÅn khi·∫øu n·∫°i v√† ƒë∆∞·ª£c gi·∫£i quy·∫øt trong 7 ng√†y l√†m vi·ªác",
      "C√≥ h·ªôi ƒë·ªìng k·ª∑ lu·∫≠t ƒë·ªÉ xem x√©t c√°c tr∆∞·ªùng h·ª£p ph·ª©c t·∫°p",
      "Quy·∫øt ƒë·ªãnh cu·ªëi c√πng thu·ªôc v·ªÅ Ban Gi√°m ƒë·ªëc trung t√¢m"
    ]
  }
];

const NoiQuyPage = () => {
  const [expandedSection, setExpandedSection] = useState<number | null>(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [showSearchResults, setShowSearchResults] = useState(false);

  // Search functionality
  const filteredRegulations = useMemo(() => {
    if (!searchTerm.trim()) return regulations;
    
    return regulations.filter(regulation => {
      const titleMatch = regulation.title.toLowerCase().includes(searchTerm.toLowerCase());
      const summaryMatch = regulation.summary.toLowerCase().includes(searchTerm.toLowerCase());
      const rulesMatch = regulation.rules.some(rule => 
        rule.toLowerCase().includes(searchTerm.toLowerCase())
      );
      return titleMatch || summaryMatch || rulesMatch;
    });
  }, [searchTerm]);

  const handleSearch = (value: string) => {
    setSearchTerm(value);
    setShowSearchResults(value.trim().length > 0);
  };

  const clearSearch = () => {
    setSearchTerm('');
    setShowSearchResults(false);
  };

  const toggleSection = (sectionId: number) => {
    setExpandedSection(expandedSection === sectionId ? null : sectionId);
    // Smooth scroll to section if expanding
    if (expandedSection !== sectionId) {
      setTimeout(() => {
        const element = document.getElementById(`regulation-${sectionId}`);
        if (element) {
          element.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }
      }, 100);
    }
  };

  const expandAll = () => {
    setExpandedSection(-1); // Special value to expand all
  };

  const collapseAll = () => {
    setExpandedSection(null);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-red-50 dark:from-gray-900 dark:to-red-900">
      <style jsx>{`
        @keyframes fade-in {
          from { opacity: 0; transform: translateY(-10px); }
          to { opacity: 1; transform: translateY(0); }
        }
        .animate-fade-in {
          animation: fade-in 0.3s ease-out;
        }
        @media print {
          .no-print { display: none !important; }
          .print-break { page-break-after: always; }
        }
      `}</style>
      <Header />
      
      {/* Breadcrumb */}
      <nav className="bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700 no-print">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center space-x-2 py-4 text-sm">
            <a href="/" className="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 flex items-center transition-colors">
              <FaHome className="mr-1" />
              Trang ch·ªß
            </a>
            <FaChevronRight className="text-gray-400 text-xs" />
            <a href="/about" className="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors">
              V·ªÅ ch√∫ng t√¥i
            </a>
            <FaChevronRight className="text-gray-400 text-xs" />
            <span className="text-gray-600 dark:text-gray-300">N·ªôi quy</span>
          </div>
        </div>
      </nav>
      
      {/* Hero Section */}
      <section className="relative bg-gradient-to-r from-red-600 via-red-700 to-purple-700 text-white py-16 sm:py-20 lg:py-24">
        <div className="absolute inset-0 bg-black opacity-10"></div>
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold mb-4 sm:mb-6">
            üìã N·ªôi Quy Trung T√¢m
          </h1>
          <p className="text-lg sm:text-xl md:text-2xl opacity-90 max-w-4xl mx-auto leading-relaxed">
            Quy ƒë·ªãnh v√† ch√≠nh s√°ch ƒë·ªÉ ƒë·∫£m b·∫£o m√¥i tr∆∞·ªùng h·ªçc t·∫≠p chuy√™n nghi·ªáp
          </p>
        </div>
      </section>

      {/* Search and Controls */}
      <section className="py-8 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-10 backdrop-blur-sm bg-opacity-95 dark:bg-opacity-95 no-print">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex flex-col lg:flex-row gap-4 items-center justify-between">
            {/* Search Bar */}
            <div className="relative flex-1 max-w-md w-full">
              <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <FaSearch className="h-5 w-5 text-gray-400" />
              </div>
              <input
                type="text"
                value={searchTerm}
                onChange={(e) => handleSearch(e.target.value)}
                placeholder="T√¨m ki·∫øm trong n·ªôi quy..."
                className="block w-full pl-10 pr-10 py-3 border border-gray-300 dark:border-gray-600 rounded-lg leading-5 bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-all duration-200"
              />
              {searchTerm && (
                <button
                  onClick={clearSearch}
                  className="absolute inset-y-0 right-0 pr-3 flex items-center hover:bg-gray-100 dark:hover:bg-gray-600 rounded-r-lg transition-colors"
                  aria-label="X√≥a t√¨m ki·∫øm"
                >
                  <FaTimes className="h-4 w-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300" />
                </button>
              )}
            </div>

            {/* Action Buttons */}
            <div className="flex gap-2 sm:gap-3 flex-wrap justify-center lg:justify-end">
              <button
                onClick={expandAll}
                className="px-3 sm:px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-all duration-200 text-sm lg:text-base shadow-sm hover:shadow-md flex items-center"
                aria-label="M·ªü r·ªông t·∫•t c·∫£ sections"
              >
                <FaChevronDown className="mr-1 sm:mr-2" />
                <span className="hidden sm:inline">M·ªü r·ªông </span>t·∫•t c·∫£
              </button>
              <button
                onClick={collapseAll}
                className="px-3 sm:px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg font-medium transition-all duration-200 text-sm lg:text-base shadow-sm hover:shadow-md flex items-center"
                aria-label="Thu g·ªçn t·∫•t c·∫£ sections"
              >
                <FaChevronUp className="mr-1 sm:mr-2" />
                <span className="hidden sm:inline">Thu g·ªçn </span>t·∫•t c·∫£
              </button>
              <button 
                className="px-3 sm:px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition-all duration-200 text-sm lg:text-base shadow-sm hover:shadow-md flex items-center"
                aria-label="T·∫£i xu·ªëng PDF"
              >
                <FaDownload className="mr-1 sm:mr-2" />
                <span className="hidden sm:inline">PDF</span>
              </button>
              <button 
                className="px-3 sm:px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-all duration-200 text-sm lg:text-base shadow-sm hover:shadow-md flex items-center"
                aria-label="In trang"
                onClick={() => window.print()}
              >
                <FaPrint className="mr-1 sm:mr-2" />
                <span className="hidden sm:inline">In</span>
              </button>
            </div>
          </div>

          {/* Search Results Info */}
          {showSearchResults && (
            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900 border border-blue-200 dark:border-blue-700 rounded-lg animate-fade-in">
              <p className="text-blue-800 dark:text-blue-200 flex items-center">
                <FaSearch className="mr-2" />
                T√¨m th·∫•y <strong className="mx-1">{filteredRegulations.length}</strong> k·∫øt qu·∫£ cho "<span className="font-medium">{searchTerm}</span>"
                {filteredRegulations.length === 0 && (
                  <span className="ml-2">üòî</span>
                )}
              </p>
            </div>
          )}
        </div>
      </section>

      {/* Regulations */}
      <section className="py-12 sm:py-16 lg:py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12 sm:mb-16">
            <h2 className="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-4 sm:mb-6">
              üìù Chi Ti·∫øt N·ªôi Quy
            </h2>
            <p className="text-base sm:text-lg lg:text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
              C√°c quy ƒë·ªãnh ƒë∆∞·ª£c ph√¢n lo·∫°i theo t·ª´ng lƒ©nh v·ª±c ƒë·ªÉ d·ªÖ d√†ng tra c·ª©u v√† √°p d·ª•ng
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-8 xl:gap-10">
            {filteredRegulations.map((section) => {
              const IconComponent = section.icon;
              const isExpanded = expandedSection === section.id || expandedSection === -1;
              
              return (
                <div
                  key={section.id}
                  id={`regulation-${section.id}`}
                  className="bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-1 w-full flex flex-col h-fit"
                >
                  {/* Card Header */}
                  <div className={`bg-gradient-to-r ${section.bgColor} ${section.darkBgColor} p-4 lg:p-6 flex-shrink-0`}>
                    <div className="flex items-start justify-between gap-3 lg:gap-4">
                      <div className="flex items-start gap-3 lg:gap-4 flex-1 min-w-0">
                        <div className="w-12 h-12 lg:w-14 lg:h-14 bg-white dark:bg-gray-700 rounded-full flex items-center justify-center shadow-md flex-shrink-0">
                          <IconComponent className={`text-xl lg:text-2xl ${section.iconColor}`} />
                        </div>
                        <div className="flex-1 min-w-0">
                          <h3 className="text-lg lg:text-xl font-bold text-gray-900 dark:text-white mb-2 lg:mb-3 leading-tight break-words">{section.title}</h3>
                          <p className="text-sm text-gray-600 dark:text-gray-300 leading-relaxed break-words">{section.summary}</p>
                        </div>
                      </div>
                      <button
                        onClick={() => toggleSection(section.id)}
                        className="p-2 lg:p-3 hover:bg-white hover:bg-opacity-30 dark:hover:bg-gray-700 dark:hover:bg-opacity-50 rounded-full transition-colors flex-shrink-0"
                        aria-label={isExpanded ? "Thu g·ªçn" : "M·ªü r·ªông"}
                      >
                        {isExpanded ? (
                          <FaChevronUp className="text-gray-700 dark:text-gray-300 text-base lg:text-lg" />
                        ) : (
                          <FaChevronDown className="text-gray-700 dark:text-gray-300 text-base lg:text-lg" />
                        )}
                      </button>
                    </div>
                  </div>

                  {/* Card Content */}
                  <div className={`flex-1 overflow-hidden transition-all duration-500 ease-in-out ${isExpanded ? 'max-h-none opacity-100' : 'max-h-44 lg:max-h-48 opacity-80'}`}>
                    <div className="p-4 lg:p-6 h-full">
                      <ul className="space-y-3 lg:space-y-4">
                        {(isExpanded ? section.rules : section.rules.slice(0, 3)).map((rule, index) => (
                          <li
                            key={index}
                            className="flex items-start group hover:bg-gray-50 dark:hover:bg-gray-700 p-2 lg:p-3 rounded-lg transition-colors"
                          >
                            <div className="flex-shrink-0 w-7 h-7 lg:w-8 lg:h-8 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full flex items-center justify-center text-xs lg:text-sm font-bold mr-3 lg:mr-4 mt-0.5 group-hover:scale-110 transition-transform">
                              {index + 1}
                            </div>
                            <span className="text-sm lg:text-base text-gray-700 dark:text-gray-300 leading-relaxed group-hover:text-gray-900 dark:group-hover:text-white transition-colors flex-1 break-words">
                              {rule}
                            </span>
                          </li>
                        ))}
                      </ul>
                      
                      {!isExpanded && section.rules.length > 3 && (
                        <div className="mt-4 lg:mt-6 text-center border-t border-gray-200 dark:border-gray-600 pt-3 lg:pt-4">
                          <button
                            onClick={() => toggleSection(section.id)}
                            className="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 font-medium flex items-center mx-auto transition-colors px-3 lg:px-4 py-2 rounded-lg hover:bg-blue-50 dark:hover:bg-blue-900 text-sm lg:text-base"
                          >
                            Xem th√™m {section.rules.length - 3} quy ƒë·ªãnh <FaChevronDown className="ml-2" />
                          </button>
                        </div>
                      )}

                      {isExpanded && (
                        <div className="mt-4 lg:mt-6 text-center border-t border-gray-200 dark:border-gray-600 pt-3 lg:pt-4">
                          <button
                            onClick={() => toggleSection(section.id)}
                            className="text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300 font-medium flex items-center mx-auto transition-colors px-3 lg:px-4 py-2 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-sm lg:text-base"
                          >
                            Thu g·ªçn <FaChevronUp className="ml-2" />
                          </button>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
          </div>

          {/* No Results */}
          {showSearchResults && filteredRegulations.length === 0 && (
            <div className="text-center py-12">
              <div className="text-6xl mb-4">üîç</div>
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£
              </h3>
              <p className="text-gray-600 dark:text-gray-300 mb-4">
                Kh√¥ng c√≥ quy ƒë·ªãnh n√†o ph√π h·ª£p v·ªõi t·ª´ kh√≥a "{searchTerm}"
              </p>
              <button
                onClick={clearSearch}
                className="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors"
              >
                X√≥a t√¨m ki·∫øm
              </button>
            </div>
          )}
        </div>
      </section>

      {/* FAQ Section */}
      <section className="py-16 bg-gray-50 dark:bg-gray-800">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h3 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-6">
              ‚ùì C√¢u H·ªèi Th∆∞·ªùng G·∫∑p
            </h3>
            <p className="text-lg sm:text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
              Nh·ªØng th·∫Øc m·∫Øc ph·ªï bi·∫øn v·ªÅ n·ªôi quy v√† ch√≠nh s√°ch c·ªßa trung t√¢m
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8 mb-16">
            {[
              {
                question: "N·∫øu t√¥i ngh·ªâ h·ªçc c√≥ l√Ω do b·∫•t kh·∫£ kh√°ng th√¨ sao?",
                answer: "B·∫°n c√≥ th·ªÉ h·ªçc b√π mi·ªÖn ph√≠ n·∫øu b√°o tr∆∞·ªõc √≠t nh·∫•t 2 ti·∫øng v√† c√≥ l√Ω do ch√≠nh ƒë√°ng. Trung t√¢m s·∫Ω s·∫Øp x·∫øp l·ªãch h·ªçc b√π ph√π h·ª£p."
              },
              {
                question: "T√¥i c√≥ th·ªÉ ho√£n thanh to√°n h·ªçc ph√≠ ƒë∆∞·ª£c kh√¥ng?",
                answer: "Trung t√¢m cho ph√©p gia h·∫°n thanh to√°n t·ªëi ƒëa 1 tu·∫ßn v·ªõi ph√≠ ph·∫°t 2% m·ªói tu·∫ßn. Tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát s·∫Ω ƒë∆∞·ª£c xem x√©t ri√™ng."
              },
              {
                question: "ƒêi·ªÅu ki·ªán ƒë·ªÉ ƒë∆∞·ª£c c·∫•p ch·ª©ng ch·ªâ l√† g√¨?",
                answer: "B·∫°n c·∫ßn ƒë·∫°t t·ªëi thi·ªÉu 80% chuy√™n c·∫ßn, ho√†n th√†nh t·∫•t c·∫£ b√†i ki·ªÉm tra v√† ƒë·∫°t ƒëi·ªÉm t·ªëi thi·ªÉu trong k·ª≥ thi cu·ªëi kh√≥a."
              },
              {
                question: "N·∫øu vi ph·∫°m n·ªôi quy s·∫Ω b·ªã x·ª≠ l√Ω nh∆∞ th·∫ø n√†o?",
                answer: "T√πy v√†o m·ª©c ƒë·ªô vi ph·∫°m: nh·∫Øc nh·ªü l·∫ßn ƒë·∫ßu, c·∫£nh c√°o l·∫ßn hai, ƒë√¨nh ch·ªâ ho·∫∑c bu·ªôc th√¥i h·ªçc v·ªõi vi ph·∫°m nghi√™m tr·ªçng."
              }
            ].map((faq, index) => (
              <div
                key={index}
                className="bg-white dark:bg-gray-700 rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300"
              >
                <h4 className="font-semibold text-gray-900 dark:text-white mb-3 text-lg">
                  {faq.question}
                </h4>
                <p className="text-gray-600 dark:text-gray-300 leading-relaxed">
                  {faq.answer}
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section className="py-16 bg-gradient-to-r from-gray-100 to-blue-100 dark:from-gray-700 dark:to-blue-800">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h3 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-6">
              üí¨ C·∫ßn H·ªó Tr·ª£ Th√™m?
            </h3>
            <p className="text-lg sm:text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto">
              N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o v·ªÅ c√°c quy ƒë·ªãnh c·ªßa trung t√¢m, 
              ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c gi·∫£i ƒë√°p chi ti·∫øt.
            </p>
          </div>
          
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8">
            {[
              { 
                icon: FaPhone, 
                title: "ƒêi·ªán Tho·∫°i", 
                info: "077.024.240", 
                color: "text-green-600", 
                bg: "from-green-50 to-green-100",
                darkBg: "dark:from-green-900 dark:to-green-800",
                action: "G·ªçi ngay",
                href: "tel:077024240"
              },
              { 
                icon: FaEnvelope, 
                title: "Email", 
                info: "info@dek.edu.vn", 
                color: "text-blue-600", 
                bg: "from-blue-50 to-blue-100",
                darkBg: "dark:from-blue-900 dark:to-blue-800",
                action: "G·ª≠i email",
                href: "mailto:info@dek.edu.vn"
              },
              { 
                icon: FaMapMarkerAlt, 
                title: "T∆∞ V·∫•n Tr·ª±c Ti·∫øp", 
                info: "T·∫°i vƒÉn ph√≤ng trung t√¢m", 
                color: "text-purple-600", 
                bg: "from-purple-50 to-purple-100",
                darkBg: "dark:from-purple-900 dark:to-purple-800",
                action: "ƒê·∫øn trung t√¢m",
                href: "/contact"
              }
            ].map((contact, index) => (
              <div
                key={index}
                className={`bg-gradient-to-br ${contact.bg} ${contact.darkBg} p-6 sm:p-8 rounded-2xl text-center shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2`}
              >
                <div className="w-14 h-14 sm:w-16 sm:h-16 bg-white dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4 shadow-md">
                  <contact.icon className={`text-2xl sm:text-3xl ${contact.color}`} />
                </div>
                <h4 className="font-bold text-gray-900 dark:text-white mb-3 text-lg">{contact.title}</h4>
                <p className={`${contact.color} font-semibold text-lg mb-4`}>{contact.info}</p>
                <a
                  href={contact.href}
                  className={`inline-block px-6 py-2 bg-white dark:bg-gray-700 ${contact.color} hover:bg-gray-50 dark:hover:bg-gray-600 rounded-lg font-medium transition-all duration-200 hover:scale-105`}
                >
                  {contact.action}
                </a>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Download Section */}
      <section className="py-12 bg-white dark:bg-gray-800">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h3 className="text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white mb-6">
            üìÑ T·∫£i Xu·ªëng N·ªôi Quy
          </h3>
          <p className="text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto">
            T·∫£i xu·ªëng b·∫£n PDF ƒë·∫ßy ƒë·ªß ƒë·ªÉ ti·ªán theo d√µi v√† tham kh·∫£o
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button className="bg-red-600 hover:bg-red-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors duration-300 flex items-center justify-center">
              <FaDownload className="mr-2" />
              T·∫£i PDF Ti·∫øng Vi·ªát
            </button>
            <button className="bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors duration-300 flex items-center justify-center">
              <FaDownload className="mr-2" />
              Download English PDF
            </button>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default NoiQuyPage; 